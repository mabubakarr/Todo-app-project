version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    #  - "8501:8501"
    volumes:
      - .:/app
    environment:
      DATABASE_URL: DATABASE_URL = 'postgresql://neondb_owner:pKwChBb6ckO8@ep-rapid-cloud-a5di1nqh.us-east-2.aws.neon.tech/neondb?sslmode=require'
    depends_on:
      - db
    networks:
      - networkName

  streamlit:
    build: .
    command: poetry run streamlit run todo_app/streamlit_app.py --server.port 8501 --server.enableCORS false
    ports:
      - "8501:8501"
    volumes:
      - .:/app
    depends_on:
      - web
    networks:
      - networkName


  db:
    image: postgres:13
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: neondb_owner
      POSTGRES_PASSWORD: pKwChBb6ckO8
      POSTGRES_DB: neondb
    ports:
      - 5432:5432
    # networks:
    #   - networkName


  
  broker:
    image: apache/kafka:3.7.0
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    networks:
      - networkName

    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: 'local'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'broker:19092' 
    
       
    depends_on:
      - broker
    networks:
      - networkName

       

  # volumes:
  #    postgres_data:
  #    networks:
  #      - networkName

networks:

  networkName:
    driver: bridge